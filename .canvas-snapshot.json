{
  "quiz": {
    "id": 20131,
    "title": "Arrays and Hashes Quiz",
    "html_url": "https://learning.flatironschool.com/courses/3299/quizzes/20131",
    "mobile_url": "https://learning.flatironschool.com/courses/3299/quizzes/20131?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-3-quiz-arrays-and-hashes\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-3-quiz-arrays-and-hashes/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 7,
    "points_possible": 7.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_20131"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": null,
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/20131/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/20131/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/20131/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/3299/quizzes/20131/submission_versions",
    "assignment_id": 133556,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 9648,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": null,
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 130247,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 135343,
      "position": null,
      "question_name": "Using .find",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Below we have a variable, <code>quiet_and_loud</code>, that is set equal to an array of\nstrings:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">quiet_and_loud</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"hi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"HI\"</span><span class=\"p\">,</span> <span class=\"s2\">\"shhh\"</span><span class=\"p\">,</span> <span class=\"s2\">\"WHAT?!\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Which of the following code blocks uses the <code>.find</code> method correctly to iterate\nover the array and return the first word that is all uppercase letters?</p>\n\n<blockquote>\n<p>This requires using the <code>.upcase</code> method. If you're unsure how to do that,\nreference the Ruby Documentation or try a Google search!</p>\n</blockquote>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8385,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">quiet_and_loud</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">word</span><span class=\"o\">|</span>\n  <span class=\"n\">word</span> <span class=\"o\">==</span> <span class=\"n\">word</span><span class=\"p\">.</span><span class=\"nf\">upcase</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Right! The <code>find</code> method iterates over an array and returns the first element\nfor which the block returns true. For the block to return true when the word\nis all uppercase letters, we can check if the word is the same after calling\nthe <code>.upcase</code> method on it. For example, <code>\"hi\" == \"hi\".upcase</code> would be false,\nbut <code>\"HI\" == \"HI\".upcase</code> would be true.</p>",
          "weight": 100.0
        },
        {
          "id": 8811,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">quiet_and_loud</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">word</span><span class=\"o\">|</span>\n  <span class=\"n\">word</span><span class=\"p\">.</span><span class=\"nf\">upcase</span> <span class=\"o\">==</span> <span class=\"kp\">true</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. The <code>find</code> method iterates over an array and returns the first\nelement for which the block returns true. <code>word.upcase</code> will always return a\nstring, and when use the <code>==</code> operator to compare any string to <code>true</code>, it\nwill return false.</p>",
          "weight": 0.0
        },
        {
          "id": 4557,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">quiet_and_loud</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">word</span><span class=\"o\">|</span>\n  <span class=\"n\">word</span><span class=\"p\">.</span><span class=\"nf\">upcase?</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. The <code>find</code> method iterates over an array and returns the first\nelement for which the block returns true. <code>upcase?</code> is not a valid string\nmethod, so this code would result in an error.</p>",
          "weight": 0.0
        },
        {
          "id": 5782,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">quiet_and_loud</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">word</span><span class=\"o\">|</span>\n  <span class=\"n\">upcase?</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. The <code>find</code> method iterates over an array and returns the first\nelement for which the block returns true. <code>upcase?</code> is not a valid method,\nand we're also not calling it <em>on</em> anything, so this code would result in an\nerror.</p>",
          "weight": 0.0
        },
        {
          "id": 2067,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130248,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 141896,
      "position": null,
      "question_name": "Using .map",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Below we have a variable, <code>nums</code>, set equal to an array of numbers:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">nums</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Which piece of code enumerates over the array with the <code>.map</code> method and returns\na new array of the <strong>squares</strong> of those numbers?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 5830,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">nums</span><span class=\"p\">.</span><span class=\"nf\">map</span> <span class=\"p\">{</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">n</span> <span class=\"p\">}</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Right! <code>map</code> will return a new array with the same length as the original\narray, and each element will be the return value of the block. To calculate\nthe square of a number, you multiply it by itself (so two squared is the same\nas two times two).</p>",
          "weight": 100.0
        },
        {
          "id": 4576,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">nums</span><span class=\"p\">.</span><span class=\"nf\">map</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"n\">n</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p><code>map</code> will return a new array with the same length as the original array, and\neach element will be the return value of the block. To calculate the square of\na number, you multiply it by itself (so two squared is the same as two times\ntwo). This would return the result <strong>doubled</strong>, not <strong>squared</strong>.</p>",
          "weight": 0.0
        },
        {
          "id": 5215,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">nums</span><span class=\"p\">.</span><span class=\"nf\">map</span> <span class=\"p\">{</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span> <span class=\"n\">nn</span> <span class=\"p\">}</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p><code>map</code> will return a new array with the same length as the original array, and\neach element will be the return value of the block. In this example, we'd get\nan error since <code>nn</code> is not a valid variable name, and it's not the correct\nsyntax for multiplying a number by itself.</p>",
          "weight": 0.0
        },
        {
          "id": 3028,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130249,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 141899,
      "position": null,
      "question_name": "Using .filter",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Below we have a variable, <code>cats_and_dogs</code>, set equal to an array of strings\nthat are either a <code>\"cat\"</code> or a <code>\"dog\"</code>:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">cats_and_dogs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"cat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dog\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dog\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dog\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>We all know that cats and dogs don't get along. Which piece of code lets us\niterate over the array and return an array of only cats?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9542,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">cats_and_dogs</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">pet</span><span class=\"o\">|</span>\n  <span class=\"n\">pet</span> <span class=\"o\">==</span> <span class=\"s2\">\"cat\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Right! The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. For the block to return true when\nthe <code>pet</code> variable is <code>\"cat\"</code>, we just need to use the <code>==</code> operator to compare\nthe strings.</p>",
          "weight": 100.0
        },
        {
          "id": 8480,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">cats_and_dogs</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">pet</span><span class=\"o\">|</span>\n  <span class=\"n\">pet</span> <span class=\"o\">==</span> <span class=\"s2\">\"dog\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. This would give us an array of all\n<code>\"dog\"</code> strings, not <code>\"cat\"</code> strings.</p>",
          "weight": 0.0
        },
        {
          "id": 305,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">cats_and_dogs</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">pet</span><span class=\"o\">|</span>\n  <span class=\"n\">pet</span> <span class=\"o\">==</span> <span class=\"n\">pet</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. This block would return <code>true</code> for\nall pets in the original array, so we'd still end up with cats and dogs\ntogether.</p>",
          "weight": 0.0
        },
        {
          "id": 6514,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">cats_and_dogs</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">pet</span><span class=\"o\">|</span>\n  <span class=\"s2\">\"cat\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true (or a truthy value). Since strings\nare truthy in Ruby, this would return all pets in the original array, so we'd\nstill end up with cats and dogs together.</p>",
          "weight": 0.0
        },
        {
          "id": 4527,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130250,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 135344,
      "position": null,
      "question_name": "Using .each",
      "question_type": "multiple_answers_question",
      "question_text": "<p>We have a variable <code>lunch_menu</code>, set equal to an array of lunch menu items:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sandwich\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sushi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"soup\"</span><span class=\"p\">,</span> <span class=\"s2\">\"salad\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Since you're super hungry and super excited about lunch, use the <code>.each</code> method\nto enumerate over the array and output a string to the terminal with each lunch\nmenu item with an <code>\"!\"</code> at the end.</p>\n\n<p>Which piece of code will achieve the desired result? Select all that apply:</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": "5099",
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! Using <code>each</code> lets us access each element of the array in the block,\nand we can output a string by using <code>puts</code>.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"nb\">puts</span> <span class=\"n\">lunch_item</span> <span class=\"o\">+</span> <span class=\"s2\">\"!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "2459",
          "text": "",
          "comments": "",
          "comments_html": "<p>This code would result in an error, since <code>lunch_menu</code> is an array, and we\ncan't us the <code>+</code> method to add a string to the array. How can we iterate over\neach element?</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"nb\">puts</span> <span class=\"n\">lunch_menu</span> <span class=\"o\">+</span> <span class=\"s2\">\"!\"</span>\n</code></pre></div>"
        },
        {
          "id": "9557",
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! Using <code>each</code> lets us access each element of the array in the block,\nand we can output a string by using <code>puts</code>.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">lunch_item</span><span class=\"si\">}</span><span class=\"s2\">!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "4939",
          "text": "",
          "comments": "",
          "comments_html": "<p>Using <code>each</code> lets us access each element of the array in the block, but this\nmethod doesn't output anything to the terminal since we aren't using <code>puts</code>.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">lunch_item</span><span class=\"si\">}</span><span class=\"s2\">!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "9449",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130251,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 141898,
      "position": null,
      "question_name": "Using .find",
      "question_type": "multiple_choice_question",
      "question_text": "<p>We have a variable <code>odds_and_evens</code> set equal to an array of numbers:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>How can we use the <code>.find</code> method to iterate over the array and return only the\n<em>first</em> array element that is <em>odd</em>?</p>\n\n<blockquote>\n<p>This requires checking if a number is odd. If you're unsure how to do that,\nreference the Ruby Documentation or try a Google search!</p>\n</blockquote>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9497,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">num</span><span class=\"o\">|</span>\n  <span class=\"n\">num</span><span class=\"p\">.</span><span class=\"nf\">odd?</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Right! The <code>find</code> method iterates over an array and returns the first element\nfor which the block returns true. For the block to return true when the number\nis odd, we can use Ruby's built-in <code>.odd?</code> method.</p>",
          "weight": 100.0
        },
        {
          "id": 4591,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">num</span><span class=\"o\">|</span>\n  <span class=\"n\">num</span><span class=\"p\">.</span><span class=\"nf\">even?</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>The <code>find</code> method iterates over an array and returns the first element for\nwhich the block returns true. For the block to return true when the number is\nodd, we'd want to use Ruby's built-in <code>.odd?</code> method, not the <code>.even?</code> method.</p>",
          "weight": 0.0
        },
        {
          "id": 5469,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">find</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">num</span><span class=\"o\">|</span>\n  <span class=\"n\">num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>The <code>find</code> method iterates over an array and returns the first element for\nwhich the block returns true. For the block to return true when the number is\nodd, we'd want to use Ruby's built-in <code>.odd?</code> method. Returning the number\ndivided by 2 will always produce a truthy value, so this would end up\nreturning the first element of the array no matter what.</p>",
          "weight": 0.0
        },
        {
          "id": 668,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130252,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 141900,
      "position": null,
      "question_name": "Using .include?",
      "question_type": "multiple_choice_question",
      "question_text": "<p>We have a variable <code>famous_cats</code> set equal to an array of famous cats:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">famous_cats</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"Maru\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Lil Bub\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Grumpy Cat\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>How could we use the <code>.include?</code> method to check and see if the array\nincludes the string <code>\"Maru\"</code>?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/array-basics\">Array Basics</a></li></ul><p></p>",
      "answers": [
        {
          "id": 163,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">famous_cats</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s2\">\"Maru\"</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Right! We can call <code>.include?</code> on an array, and pass it a value that we want\nto check for in the array.</p>",
          "weight": 100.0
        },
        {
          "id": 9751,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">famous_cats</span><span class=\"p\">.</span><span class=\"nf\">include?</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>We can call <code>.include?</code> on an array, but we need to pass it a value that we\nwant to check for in the array.</p>",
          "weight": 0.0
        },
        {
          "id": 2999,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">famous_cats</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"kp\">true</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>We can call <code>.include?</code> on an array, but we need to pass it the value that we\nwant to check for in the array, which in our case is <code>\"Maru\"</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 1492,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 130253,
      "quiz_id": 20131,
      "quiz_group_id": null,
      "assessment_question_id": 141897,
      "position": null,
      "question_name": "Using .filter",
      "question_type": "multiple_answers_question",
      "question_text": "<p>We have a variable <code>odds_and_evens</code> set equal to an array of numbers:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Which code can we use with the <code>.filter</code> enumerator to iterate over the array\nand return any even numbers? Select all that apply.</p>\n\n<blockquote>\n<p>This requires checking if a number is even. If you're unsure how to do that,\nreference the Ruby Documentation or try a Google search!</p>\n</blockquote>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/enumerables-common-methods\">Enumerables: Common Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": "6702",
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. For the block to return true when\nthe number is even, we can use Ruby's built-in <code>.even?</code> method.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n  <span class=\"n\">n</span><span class=\"p\">.</span><span class=\"nf\">even?</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "7222",
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. For the block to return true when\nthe number is even, we can the <code>%</code> (remainder) operator to see if the number is\nevenly divisible by two.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n  <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "2065",
          "text": "",
          "comments": "",
          "comments_html": "<p>The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. Only <code>0 / 2 == 0</code> will return true,\nso we'd miss all the other even numbers.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n  <span class=\"n\">n</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "5171",
          "text": "",
          "comments": "",
          "comments_html": "<p>The <code>filter</code> method iterates over an array and returns an array of all\nelements for which the block returns true. Adding 2 to a number will just\nreturn a new number, and since all numbers in Ruby are truthy, we'll end up\nwith an array with the same numbers as our original array.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">odds_and_evens</span><span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">n</span><span class=\"o\">|</span>\n  <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">2</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": "6025",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}